// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(FrigorificoContext))]
    partial class FrigorificoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataAccess.Models.Campo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CantidadVacas")
                        .HasColumnType("int");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DeudaAPagar")
                        .HasColumnType("DECIMAL(11,2)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdFrigorifico")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdFrigorifico");

                    b.ToTable("Campos");
                });

            modelBuilder.Entity("DataAccess.Models.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdFrigorifico")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SaldoACobrar")
                        .HasColumnType("DECIMAL(9,2)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("IdFrigorifico");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("DataAccess.Models.DetalleFactura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CantidadPorKg")
                        .HasColumnType("int");

                    b.Property<int>("IdFacturaVenta")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioTotalProducto")
                        .HasColumnType("DECIMAL(9,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdFacturaVenta");

                    b.HasIndex("IdProducto");

                    b.ToTable("DetallesFactura");
                });

            modelBuilder.Entity("DataAccess.Models.FacturaCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CantidadVacas")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCampo")
                        .HasColumnType("int");

                    b.Property<int>("IdFrigorifico")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioTotalCompra")
                        .HasColumnType("DECIMAL(9,2)");

                    b.Property<decimal>("PrecioVaca")
                        .HasColumnType("DECIMAL(7,2)");

                    b.Property<int>("TipoDePago")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCampo");

                    b.HasIndex("IdFrigorifico");

                    b.ToTable("FacturasCompra");
                });

            modelBuilder.Entity("DataAccess.Models.FacturaVenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdFrigorifico")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioTotalVenta")
                        .HasColumnType("DECIMAL(9,2)");

                    b.Property<int>("TipoDePago")
                        .HasColumnType("int");

                    b.Property<string>("Vendedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdFrigorifico");

                    b.ToTable("FacturasVenta");
                });

            modelBuilder.Entity("DataAccess.Models.Frigorifico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CUIT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Caja")
                        .HasColumnType("DECIMAL(9,2)");

                    b.Property<int>("CantidadVacas")
                        .HasColumnType("int");

                    b.Property<string>("CategoriaIVA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DeudasACobrar")
                        .HasColumnType("DECIMAL(9,2)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Frigorificos");
                });

            modelBuilder.Entity("DataAccess.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdFrigorifico")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecioPorKg")
                        .HasColumnType("DECIMAL(9,2)");

                    b.Property<int>("StockPorKg")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdFrigorifico");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("DataAccess.Models.Campo", b =>
                {
                    b.HasOne("DataAccess.Models.Frigorifico", "Frigorifico")
                        .WithMany("Campos")
                        .HasForeignKey("IdFrigorifico")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Frigorifico");
                });

            modelBuilder.Entity("DataAccess.Models.Cliente", b =>
                {
                    b.HasOne("DataAccess.Models.Frigorifico", "Frigorifico")
                        .WithMany("Clientes")
                        .HasForeignKey("IdFrigorifico")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Frigorifico");
                });

            modelBuilder.Entity("DataAccess.Models.DetalleFactura", b =>
                {
                    b.HasOne("DataAccess.Models.FacturaVenta", "FacturaVenta")
                        .WithMany("DetallesFactura")
                        .HasForeignKey("IdFacturaVenta")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DataAccess.Models.Producto", "Producto")
                        .WithMany("DetallesFactura")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FacturaVenta");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("DataAccess.Models.FacturaCompra", b =>
                {
                    b.HasOne("DataAccess.Models.Campo", "Campo")
                        .WithMany("FacturasCompra")
                        .HasForeignKey("IdCampo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DataAccess.Models.Frigorifico", "Frigorifico")
                        .WithMany("FacturasCompra")
                        .HasForeignKey("IdFrigorifico")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campo");

                    b.Navigation("Frigorifico");
                });

            modelBuilder.Entity("DataAccess.Models.FacturaVenta", b =>
                {
                    b.HasOne("DataAccess.Models.Cliente", "Cliente")
                        .WithMany("FacturasVenta")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Models.Frigorifico", "Frigorifico")
                        .WithMany("FacturasVenta")
                        .HasForeignKey("IdFrigorifico")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Frigorifico");
                });

            modelBuilder.Entity("DataAccess.Models.Producto", b =>
                {
                    b.HasOne("DataAccess.Models.Frigorifico", "Frigorifico")
                        .WithMany("Productos")
                        .HasForeignKey("IdFrigorifico")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Frigorifico");
                });

            modelBuilder.Entity("DataAccess.Models.Campo", b =>
                {
                    b.Navigation("FacturasCompra");
                });

            modelBuilder.Entity("DataAccess.Models.Cliente", b =>
                {
                    b.Navigation("FacturasVenta");
                });

            modelBuilder.Entity("DataAccess.Models.FacturaVenta", b =>
                {
                    b.Navigation("DetallesFactura");
                });

            modelBuilder.Entity("DataAccess.Models.Frigorifico", b =>
                {
                    b.Navigation("Campos");

                    b.Navigation("Clientes");

                    b.Navigation("FacturasCompra");

                    b.Navigation("FacturasVenta");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("DataAccess.Models.Producto", b =>
                {
                    b.Navigation("DetallesFactura");
                });
#pragma warning restore 612, 618
        }
    }
}
